{% set name = "meshpy" %}
{% set uname = "MeshPy" %}
{% set version = "2020.1" %}
{% set sha256 = "7b14eef33ccfb7974c058cea04672bfcd66e57dfcfa6a65cf01943b08964e879" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ uname }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ uname[0] }}/{{ uname }}/{{ uname }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 1002
  script:
    - "{{ PYTHON }} -m pip install . --no-deps -v"
    - echo src/cpp/tetgen-LICENSE >> doc/faq.rst
  skip: True  # [win and py<35]

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - pybind11                               # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    - python
    - pip
    - pytools
    - numpy
    - pytest
    - six
    - pybind11
  run:
    - python
    - pytools
    - numpy
    - six

test:
  source_files:
    - test/*
  requires:
    - pytest
  commands:
    - pytest test
  imports:
    - meshpy

about:
  home: http://github.com/inducer/meshpy
  license: MIT AND LicenseRef-Proprietary-Triangle AND AGPL-3.0-or-later
  license_file: doc/faq.rst
  summary: 'Triangular and Tetrahedral Mesh Generator'

  description: |

    MeshPy offers quality triangular and tetrahedral mesh generation for
    Python. Meshes of this type are chiefly used in finite-element
    simulation codes, but also have many other applications ranging from
    computer graphics to robotics.

    In order to generate 2D and 3D meshes, MeshPy provides Python interfaces
    to three well-regarded mesh generators,
    [Triangle](http://www.cs.cmu.edu/~quake/triangle.html) by J. Shewchuk,
    [TetGen](http://tetgen.berlios.de/) by Hang Si, and
    [gmsh](http://www.geuz.org/gmsh/) by Christophe Geuzaine and
    Jean-Francois Remacle. The former two are included in the package in
    slightly modified versions. A generic mesh reader for the latter is
    included, as is an easy way to run gmsh from a Python script.

    As of Version 0.91.2, MeshPy also works with Python 3.

  doc_url: https://documen.tician.de/meshpy
  dev_url: https://github.com/inducer/meshpy

extra:
  recipe-maintainers:
    - inducer
    - isuruf
